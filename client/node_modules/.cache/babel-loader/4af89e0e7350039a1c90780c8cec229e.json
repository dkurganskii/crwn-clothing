{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFaillure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFaillure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/dmitrii/Desktop/Projects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFaillure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACzDC,EAAAA,IAAI,EAAEL,eAAe,CAACM;AADmC,CAArB,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIH,cAAD,KAAqB;AAC3DC,EAAAA,IAAI,EAAEL,eAAe,CAACQ,yBADqC;AAE3DC,EAAAA,OAAO,EAAEL;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMM,wBAAwB,GAAIC,YAAD,KAAmB;AAC1DN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADoC;AAE1DH,EAAAA,OAAO,EAAEE;AAFiD,CAAnB,CAAjC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC/C,SAAQC,QAAD,IAAc;AACpB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,IAAAA,aAAa,CACXE,GADF,GAEEC,IAFF,CAEQC,QAAD,IAAc;AACnB,YAAMf,cAAc,GAAGF,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACP,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACA,KALF,EAMEgB,KANF,CAMSC,KAAD,IAAWP,QAAQ,CAACJ,wBAAwB,CAACW,KAAK,CAACC,OAAP,CAAzB,CAN3B;AAOA,GAVD;AAWA,CAZM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = (collectionsMap) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n});\n\nexport const fetchCollectionsFaillure = (errorMessage) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n\treturn (dispatch) => {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tdispatch(fetchCollectionsStart());\n\t\tcollectionRef\n\t\t\t.get()\n\t\t\t.then((snapshot) => {\n\t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap));\n\t\t\t})\n\t\t\t.catch((error) => dispatch(fetchCollectionsFaillure(error.message)));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}