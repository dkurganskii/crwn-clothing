{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrii/Desktop/Projects/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SignUpTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/dmitrii/Desktop/Projects/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUpContainer","SignUpTitle","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { signUpStart } from '../../redux/user/user.actions';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst SignUp = ({ signUpStart }) => {\n\tconst [ userCredentials, setUserCredentials ] = useState({\n\t\tdisplayName: '',\n\t\temail: '',\n\t\tpassword: '',\n\t\tconfirmPassword: ''\n\t});\n\n\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\n\tconst handleSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (password !== confirmPassword) {\n\t\t\talert(\"passwords don't match\");\n\t\t\treturn;\n\t\t}\n\n\t\tsignUpStart({ displayName, email, password });\n\t};\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\n\t\tsetUserCredentials({ ...userCredentials, [name]: value });\n\t};\n\n\treturn (\n\t\t<SignUpContainer>\n\t\t\t<SignUpTitle>I do not have a account</SignUpTitle>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form className=\"sign-up-form\" onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"displayName\"\n\t\t\t\t\tvalue={displayName}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Display Name\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput type=\"email\" name=\"email\" value={email} onChange={handleChange} label=\"Email\" required />\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<CustomButton type=\"submit\">SIGN UP</CustomButton>\n\t\t\t</form>\n\t\t</SignUpContainer>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\tsignUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}