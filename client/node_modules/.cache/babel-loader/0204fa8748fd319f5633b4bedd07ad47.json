{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dmitrii/Desktop/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dmitrii/Desktop/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/dmitrii/Desktop/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dmitrii/Desktop/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/dmitrii/Desktop/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dmitrii/Desktop/Projects/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Route}from'react-router-dom';import{connect}from'react-redux';import CollectionsOverview from'../../components/collections-overview/collections-overview.component';import CollectionPage from'../collection/collection.component';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';import{updateCollections as _updateCollections}from'../../redux/shop/shop.actions';import WithSpinner from'../../components/with-spinner/with-spinner.component';var CollectionsOverviewWithSpinner=WithSpinner(CollectionsOverview);var CollectionPageWithSpinner=WithSpinner(CollectionPage);var ShopPage=/*#__PURE__*/function(_React$Component){_inherits(ShopPage,_React$Component);var _super=_createSuper(ShopPage);function ShopPage(){var _this;_classCallCheck(this,ShopPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loading:true};_this.unsubscribeFromSnapshot=null;return _this;}_createClass(ShopPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var updateCollections=this.props.updateCollections;var collectionRef=firestore.collection('collections');collectionRef.onSnapshot(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(snapshot){var collectionsMap;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:collectionsMap=convertCollectionsSnapshotToMap(snapshot);updateCollections(collectionsMap);_this2.setState({loading:false});case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());}},{key:\"render\",value:function render(){var match=this.props.match;var loading=this.state.loading;return/*#__PURE__*/React.createElement(\"div\",{className:\"shop-page\"},/*#__PURE__*/React.createElement(Route,{exact:true,path:\"\".concat(match.path),render:function render(props){return/*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner,Object.assign({isLoading:loading},props));}}),/*#__PURE__*/React.createElement(Route,{path:\"\".concat(match.path,\"/:collectionId\"),render:function render(props){return/*#__PURE__*/React.createElement(CollectionPageWithSpinner,Object.assign({isLoading:loading},props));}}));}}]);return ShopPage;}(React.Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateCollections:function updateCollections(collectionsMap){return dispatch(_updateCollections(collectionsMap));}};};export default connect(null,mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/dmitrii/Desktop/Projects/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","match","path","Component","mapDispatchToProps","dispatch"],"mappings":"q8BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,sEAAhC,CACA,MAAOC,CAAAA,cAAP,KAA2B,oCAA3B,CACA,OAASC,SAAT,CAAoBC,+BAApB,KAA2D,+BAA3D,CACA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,KAAkC,+BAAlC,CACA,MAAOC,CAAAA,WAAP,KAAwB,sDAAxB,CAEA,GAAMC,CAAAA,8BAA8B,CAAGD,WAAW,CAACL,mBAAD,CAAlD,CACA,GAAMO,CAAAA,yBAAyB,CAAGF,WAAW,CAACJ,cAAD,CAA7C,C,GAEMO,CAAAA,Q,+UACLC,K,CAAQ,CACPC,OAAO,CAAE,IADF,C,OAGRC,uB,CAA0B,I,iGAEN,oBACXP,CAAAA,iBADW,CACW,KAAKQ,KADhB,CACXR,iBADW,CAEnB,GAAMS,CAAAA,aAAa,CAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB,CACAD,aAAa,CAACE,UAAd,0FAAyB,iBAAOC,QAAP,qIAClBC,cADkB,CACDd,+BAA+B,CAACa,QAAD,CAD9B,CAExBZ,iBAAiB,CAACa,cAAD,CAAjB,CACA,MAAI,CAACC,QAAL,CAAc,CAAER,OAAO,CAAE,KAAX,CAAd,EAHwB,sDAAzB,gEAKA,C,uCACQ,IACAS,CAAAA,KADA,CACU,KAAKP,KADf,CACAO,KADA,IAEAT,CAAAA,OAFA,CAEY,KAAKD,KAFjB,CAEAC,OAFA,CAGR,mBACC,2BAAK,SAAS,CAAC,WAAf,eACC,oBAAC,KAAD,EACC,KAAK,KADN,CAEC,IAAI,WAAKS,KAAK,CAACC,IAAX,CAFL,CAGC,MAAM,CAAE,gBAACR,KAAD,qBAAW,oBAAC,8BAAD,gBAAgC,SAAS,CAAEF,OAA3C,EAAwDE,KAAxD,EAAX,EAHT,EADD,cAMC,oBAAC,KAAD,EACC,IAAI,WAAKO,KAAK,CAACC,IAAX,kBADL,CAEC,MAAM,CAAE,gBAACR,KAAD,qBAAW,oBAAC,yBAAD,gBAA2B,SAAS,CAAEF,OAAtC,EAAmDE,KAAnD,EAAX,EAFT,EAND,CADD,CAaA,C,sBA/BqBf,KAAK,CAACwB,S,EAkC7B,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACzCnB,iBAAiB,CAAE,2BAACa,cAAD,QAAoBM,CAAAA,QAAQ,CAACnB,kBAAiB,CAACa,cAAD,CAAlB,CAA5B,EADsB,CAAf,EAA3B,CAIA,cAAelB,CAAAA,OAAO,CAAC,IAAD,CAAOuB,kBAAP,CAAP,CAAkCd,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\tstate = {\n\t\tloading: true\n\t};\n\tunsubscribeFromSnapshot = null;\n\n\tcomponentDidMount() {\n\t\tconst { updateCollections } = this.props;\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tcollectionRef.onSnapshot(async (snapshot) => {\n\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n\t\t\tupdateCollections(collectionsMap);\n\t\t\tthis.setState({ loading: false });\n\t\t});\n\t}\n\trender() {\n\t\tconst { match } = this.props;\n\t\tconst { loading } = this.state;\n\t\treturn (\n\t\t\t<div className=\"shop-page\">\n\t\t\t\t<Route\n\t\t\t\t\texact\n\t\t\t\t\tpath={`${match.path}`}\n\t\t\t\t\trender={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath={`${match.path}/:collectionId`}\n\t\t\t\t\trender={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n\tupdateCollections: (collectionsMap) => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}