{"ast":null,"code":"// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n// const config = {\n// \tapiKey: 'AIzaSyAAlAn-H2Jxz7BgXLYPu4X7UzHuDMFcJuM',\n// \tauthDomain: 'crwn-db-b40f0.firebaseapp.com',\n// \tdatabaseURL: 'https://crwn-db-b40f0.firebaseio.com',\n// \tprojectId: 'crwn-db-b40f0',\n// \tstorageBucket: 'crwn-db-b40f0.appspot.com',\n// \tmessagingSenderId: '26314677744',\n// \tappId: '1:26314677744:web:87a96effc7a0bfd94c1135',\n// \tmeasurementId: 'G-VM9V3LJ8JP'\n// };\n// export const createUserProfileDocument = async (userAuth, additionalData) => {\n// \tif (!userAuth) return;\n// \tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n// \tconst snapShot = await userRef.get();\n// \tif (!snapShot.exists) {\n// \t\tconst { displayName, email } = userAuth;\n// \t\tconst createdAt = new Date();\n// \t\ttry {\n// \t\t\tawait userRef.set({ displayName, email, createdAt, ...additionalData });\n// \t\t} catch (error) {\n// \t\t\tconsole.log('error creating user', error.message);\n// \t\t}\n// \t}\n// \treturn userRef;\n// };\n// export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n// \tconst collectionRef = firestore.collection(collectionKey);\n// \tconst batch = firestore.batch();\n// \tobjectsToAdd.forEach((obj) => {\n// \t\tconst newDocRef = collectionRef.doc();\n// \t\tbatch.set(newDocRef, obj);\n// \t});\n// \treturn await batch.commit();\n// };\n// firebase.initializeApp(config);\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n// export default firebase;","map":{"version":3,"sources":["/Users/dmitrii/Desktop/Projects/crwn-clothing/src/firebase/firebase.utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import firebase from 'firebase/app';\n// import 'firebase/firestore';\n// import 'firebase/auth';\n\n// const config = {\n// \tapiKey: 'AIzaSyAAlAn-H2Jxz7BgXLYPu4X7UzHuDMFcJuM',\n// \tauthDomain: 'crwn-db-b40f0.firebaseapp.com',\n// \tdatabaseURL: 'https://crwn-db-b40f0.firebaseio.com',\n// \tprojectId: 'crwn-db-b40f0',\n// \tstorageBucket: 'crwn-db-b40f0.appspot.com',\n// \tmessagingSenderId: '26314677744',\n// \tappId: '1:26314677744:web:87a96effc7a0bfd94c1135',\n// \tmeasurementId: 'G-VM9V3LJ8JP'\n// };\n\n// export const createUserProfileDocument = async (userAuth, additionalData) => {\n// \tif (!userAuth) return;\n\n// \tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n// \tconst snapShot = await userRef.get();\n\n// \tif (!snapShot.exists) {\n// \t\tconst { displayName, email } = userAuth;\n// \t\tconst createdAt = new Date();\n\n// \t\ttry {\n// \t\t\tawait userRef.set({ displayName, email, createdAt, ...additionalData });\n// \t\t} catch (error) {\n// \t\t\tconsole.log('error creating user', error.message);\n// \t\t}\n// \t}\n// \treturn userRef;\n// };\n\n// export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n// \tconst collectionRef = firestore.collection(collectionKey);\n\n// \tconst batch = firestore.batch();\n// \tobjectsToAdd.forEach((obj) => {\n// \t\tconst newDocRef = collectionRef.doc();\n// \t\tbatch.set(newDocRef, obj);\n// \t});\n// \treturn await batch.commit();\n// };\n\n// firebase.initializeApp(config);\n\n// export const auth = firebase.auth();\n// export const firestore = firebase.firestore();\n\n// const provider = new firebase.auth.GoogleAuthProvider();\n// provider.setCustomParameters({ prompt: 'select_account' });\n// export const signInWithGoogle = () => auth.signInWithPopup(provider);\n\n// export default firebase;\n"]},"metadata":{},"sourceType":"module"}